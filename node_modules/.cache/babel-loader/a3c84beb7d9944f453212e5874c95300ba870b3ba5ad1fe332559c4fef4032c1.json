{"ast":null,"code":"var _jsxFileName = \"/home/jammyfish/odinproject/practice/src/components/Quote.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quote = () => {\n  const fetchQuote = () => {\n    fetch('http://sunnyquotes.net/api/sq-api.js').then(response => response.json()) // Parse the response as JSON\n    .then(data => console.log(data.quote)) // Update the state with the fetched quote\n    .catch(error => console.error('Error fetching quote:', error)); // Handle any errors\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IASIP Quote Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchQuote,\n      children: \"New Quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"quote\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Quote;\nexport default Quote;\nvar _c;\n$RefreshReg$(_c, \"Quote\");","map":{"version":3,"names":["Quote","fetchQuote","fetch","then","response","json","data","console","log","quote","catch","error","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","$RefreshReg$"],"sources":["/home/jammyfish/odinproject/practice/src/components/Quote.js"],"sourcesContent":["const Quote = () => {\n\n    const fetchQuote = () => {\n        fetch('http://sunnyquotes.net/api/sq-api.js')\n        .then(response => response.json()) // Parse the response as JSON\n        .then(data => console.log(data.quote)) // Update the state with the fetched quote\n        .catch(error => console.error('Error fetching quote:', error)); // Handle any errors\n    }\n\n  return (\n    <div>\n        <h1>IASIP Quote Generator</h1>\n        <button onClick={fetchQuote}>New Quote</button>\n        <p id=\"quote\"></p>\n    </div>\n  )\n}\n\nexport default Quote"],"mappings":";;AAAA,MAAMA,KAAK,GAAGA,CAAA,KAAM;EAEhB,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBC,KAAK,CAAC,sCAAsC,CAAC,CAC5CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAAC;IAAA,CAClCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC;IAAA,CACtCC,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;EACpE,CAAC;;EAEH,oBACEC,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAAC,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC9BL,OAAA;MAAQM,OAAO,EAAEjB,UAAW;MAAAY,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC/CL,OAAA;MAAGO,EAAE,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChB;AAEV,CAAC;AAAAG,EAAA,GAhBKpB,KAAK;AAkBX,eAAeA,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}